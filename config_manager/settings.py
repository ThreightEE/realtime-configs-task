"""
Django settings for config_manager project.

Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path

import os
import environ

BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DEBUG=(bool, False),
    POSTGRES_HOST=str,
    POSTGRES_PORT=int,
    POSTGRES_DB=str,
    POSTGRES_USER=str,
    POSTGRES_PASSWORD=str,
    DJANGO_ALLOWED_HOSTS=list,
    SECRET_KEY=str,
)

env_dir = os.path.join(BASE_DIR, '.env')
environ.Env.read_env(env_dir)


SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')
ALLOWED_HOSTS = env.list('DJANGO_ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'config_app',
    'constance',
]

MIDDLEWARE = [
    'config_app.middleware.LogRequestPIDMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config_manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config_manager.wsgi.application'


# Database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('POSTGRES_DB'),
        'USER': env('POSTGRES_USER'),
        'PASSWORD': env('POSTGRES_PASSWORD'),
        'HOST': env('POSTGRES_HOST'),
        'PORT': env('POSTGRES_PORT'),
    }
}


# Constance settings

CONSTANCE_BACKEND = 'constance.backends.redisd.RedisBackend'

CONSTANCE_REDIS_CONNECTION = {
    'host': env('REDIS_HOST'),
    'port': env('REDIS_PORT'),
    'db': env('REDIS_DB'),
}

CONSTANCE_CONFIG = {
    'SITE_NAME': ('Config Manager', 'Site name', str),
    'WELCOME_MESSAGE': ('You can see real-time configs and their values here', 'Welcome text', str),
    'THEME_COLOR': ('#4a6cf7', 'Background theme colour in HEX', str),
    'MAINTENANCE_MODE': (False, 'Maintenance mode', bool),
    'ITEMS_PER_PAGE': (5, 'Config items per page', int),

    'SHOW_LOGS': (True, 'Show change logs', bool),
    'LOGS_COUNT': (10, 'Number of recent change logs to show', int),

    'UI_POLLING_INTERVAL': (float(300), 'Polling interval for real-time UI, s', float),
}

CONSTANCE_CONFIG_FIELDSETS = {
    'General': ('SITE_NAME', 'THEME_COLOR', 'MAINTENANCE_MODE'),
    'Content': ('WELCOME_MESSAGE', 'ITEMS_PER_PAGE'),
    'Logging': ('SHOW_LOGS', 'LOGS_COUNT'),
    'Demo': ('UI_POLLING_INTERVAL',)
}

REDIS_PUB_SUB_CHANNEL = 'realtime_config_updates'


# Logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
        'config_app': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

STATIC_URL = 'static/'

# Default primary key field type

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
